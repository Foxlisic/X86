// Параметры
// -----------------------------------------------------------------------------    

localparam
    
    PREPARE     = 0,            // Инициализация перед выполнением
    MAIN        = 1,            // Разбор опкода и префиксов
    ERROR       = 2,            // ОШИБКА!
    RUN         = 3,            // Исполнение инструкции
    REGMEMWR    = 4,            // Процедура записывает в память или регистр значение wb
    MODRM       = 5,            // Разбор байта modrm
    IMMEDIATE   = 6,            // Считывание Immediate 8/16
    PUSH        = 7,            // Сохранение в стек 16 bits
    POP         = 8;            // Извлечение из стека

localparam

    OF  = 11, DF  = 10, IF  = 9, TF  = 8,
    SF  = 7,  ZF  = 6,  AF  = 4, PF  = 2,
    CF  = 0;
    
localparam

    ADD = 0, OR  = 1, ADC = 2, SBB = 3,
    AND = 4, SUB = 5, XOR = 6, CMP = 7;
    
// Системные регистры-защелки
// -----------------------------------------------------------------------------    
    
reg     [ 7:0]  opcode;
reg             cursor;         // =0 CS:IP; =1 segment:ea
reg     [15:0]  segment;        // Активный сегмент
reg     [15:0]  ea;             // Эффективный адрес 
reg             override;       // Наличие сегментного префикса
reg     [ 1:0]  rep;            // REP: префикс
reg     [ 2:0]  alu;            // 8 вариантов 0=ADD, 1=OR, ADC, SBB, AND, SUB, XOR, 7=CMP
reg     [15:0]  op1;            // Левый операнд (dst)
reg     [15:0]  op2;            // Правый операнд (src)
reg     [ 4:0]  t  = 0;         // Текущий статус выполнения процедуры (32)
reg     [ 4:0]  tn = 0;         // Адрес возврата после IMMEDIATE
reg     [ 3:0]  m = 0;          // Линия в выполнении процедур из RUN (16)
reg     [ 2:0]  s = 0;          // Линия для исполнения других процедур (8)
reg     [ 2:0]  regn;           // Номер регистра
reg     [15:0]  wb;             // Временное хранение значения для записи в регистр или память
reg     [ 7:0]  modrm;          // Номер регистра для записи числа wb
reg             dir;            // dir=0 запись в память; dir=1 запись в регистр
reg             size;           // size=0 (8 bit), size=1 (16 bit)

// Значение регистров
// -----------------------------------------------------------------------------    

// Получение значения регистра по номеру regn и size
wire [15:0] regv = 
    regn == 0 ? (size ? ax : ax[ 7:0]) :
    regn == 1 ? (size ? cx : cx[ 7:0]) :
    regn == 2 ? (size ? dx : dx[ 7:0]) :
    regn == 3 ? (size ? bx : bx[ 7:0]) :
    regn == 4 ? (size ? sp : ax[15:8]) :
    regn == 5 ? (size ? bp : cx[15:8]) :
    regn == 6 ? (size ? si : dx[15:8]) : 
                (size ? di : bx[15:8]); 

// Вычисление условий
// -----------------------------------------------------------------------------    

wire [7:0] cond = {

    /* 6 JLE */ (flags[SF] ^ flags[OF]) | flags[ZF],
    /* 6 JL  */ flags[SF] ^ flags[OF],
    /* 5 JP  */ flags[PF],
    /* 4 JS  */ flags[SF],
    /* 3 JBE */ flags[ZF] & flags[CF],
    /* 2 JZ  */ flags[ZF],
    /* 1 JC  */ flags[CF],
    /* 0 JO  */ flags[OF]
};
